version: 2.1

orbs:
  python: circleci/python@1.2.0
  docker: circleci/docker@0.5.20

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Linting
          command: |
            pip install flake8
            flake8 .
      - run:
          name: Run Tests and Check Coverage
          command: |
            pip install pytest pytest-cov
            pytest --cov=. --cov-report=term --cov-fail-under=80
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  deploy-to-pythonanywhere:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install PythonAnywhere API client
          command: |
            pip install pythonanywhere
      - run:
          name: Deploy to PythonAnywhere
          command: |
            # Assurez-vous de remplacer 'your_pythonanywhere_username' par votre nom d'utilisateur PythonAnywhere
            # et 'your_webapp_name' par le nom de votre application web sur PythonAnywhere
            echo "from pythonanywhere.api.webapp import Webapp" > pa_deploy_script.py
            echo "api_token = '${PYTHONANYWHERE_API_TOKEN}'" >> pa_deploy_script.py
            echo "username = '${PYTHONANYWHERE_USERNAME}'" >> pa_deploy_script.py
            echo "webapp = Webapp(username, 'oclettingswebsite', api_token)" >> pa_deploy_script.py
            echo "webapp.reload()" >> pa_deploy_script.py
            python pa_deploy_script.py

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-test
      - deploy-to-pythonanywhere:
          requires:
            - build-and-test
