version: 2.1

orbs:
  python: circleci/python@1.2.0
  docker: circleci/docker@0.5.20

jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout

      # Restauration du cache (si vous voulez l'ajouter)
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-

      - python/install-packages:
          pkg-manager: pip

      # Linting
      - run:
          name: Linting
          command: |
            pip install flake8
            flake8 .

      # Exécution des tests avec vérification de la couverture
      - run:
          name: Run Tests and Check Coverage
          command: |
            pip install pytest pytest-cov
            pytest --cov=. --cov-report=term --cov-fail-under=80

      # Sauvegarde du cache (si vous voulez l'ajouter)
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  build-docker-image:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Echo DJANGO_SECRET_KEY
          command: |
            echo "DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY"
      - run:
          name: Build Docker Image
          command: |
            docker build --build-arg DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY} -t p13-oclettings-web:$CIRCLE_SHA1 .

      - run:
          name: Login to Docker Hub
          command: echo "$DOCKERHUB_PASSWORD" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin

      - run:
          name: Push Docker Image to Registry
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker tag p13-oclettings-web:$CIRCLE_SHA1 $DOCKERHUB_USERNAME/p13-oclettings-web:$CIRCLE_SHA1
            docker push $DOCKERHUB_USERNAME/p13-oclettings-web:$CIRCLE_SHA1

  deploy-to-aws:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            docker build --build-arg DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY} -t p13-oclettings-web:$CIRCLE_SHA1 .
      - run:
          name: Install AWS CLI
          command: |
            apt-get update && apt-get install awscli -y
      - run:
          name: Configure AWS CLI
          command: |
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
            aws configure set default.region ${AWS_DEFAULT_REGION}
      - run:
          name: AWS ECR Login
          command: |
            aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - run:
          name: Tag and Push Docker Image to AWS ECR
          command: |
            docker tag p13-oclettings-web:$CIRCLE_SHA1 $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/p13-oclettings-web:$CIRCLE_SHA1
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/p13-oclettings-web:$CIRCLE_SHA1
      - run:
          name: Deploy to AWS ECS
          command: |
            # Add your AWS ECS deployment commands here

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-and-test
      - build-docker-image:
          requires:
            - build-and-test
      - deploy-to-aws:
          requires:
            - build-docker-image
