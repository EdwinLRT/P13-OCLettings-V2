version: 2.1

orbs:
  python: circleci/python@1.2.0
  docker: circleci/docker@0.5.20

jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.11
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Linting
          command: |
            pip install flake8
            flake8 .
      - run:
          name: Run Tests
          command: |
            pip install pytest pytest-cov
            pytest --cov=.
      - run:
          name: Run Tests and Check Coverage
          command: |
            pip install pytest pytest-cov
            pytest --cov=. --cov-report=term --cov-fail-under=80

build-docker-image:
  docker:
    - image: circleci/python:3.11
  steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Build Docker Image
        command: |
          docker build -t myapp:$CIRCLE_SHA1 .
    - run:
        name: Push Docker Image to Registry
        command: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker tag myapp:$CIRCLE_SHA1 $DOCKER_USERNAME/myapp:$CIRCLE_SHA1
          docker push $DOCKER_USERNAME/myapp:$CIRCLE_SHA1

deploy-to-heroku:
  docker:
    - image: cimg/python:3.11
  steps:
    - checkout
    - run:
        name: Install Heroku CLI
        command: |
          curl https://cli-assets.heroku.com/install.sh | sh
    - run:
        name: Heroku Login
        command: |
          echo ":$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com
    - run:
        name: Build and Push Docker Image to Heroku Registry
        command: |
          heroku container:login
          docker build -t registry.heroku.com/$HEROKU_APP_NAME/web .
          docker push registry.heroku.com/$HEROKU_APP_NAME/web
    - run:
        name: Release to Heroku
        command: |
          heroku container:release web -a $HEROKU_APP_NAME


workflows:
  version: 2
  build-deploy:
    jobs:
      - build-and-test
      - build-docker-image:
          requires:
            - build-and-test
      - deploy-to-heroku:
          requires:
            - build-docker-image
