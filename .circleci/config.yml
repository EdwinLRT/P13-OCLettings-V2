version: 2.1

orbs:
  python: circleci/python@1.2.0
  docker: circleci/docker@0.5.20
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-ecs: circleci/aws-ecs@1.3.0

jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Linting
          command: |
            pip install flake8
            flake8 .
      - run:
          name: Run Tests and Check Coverage
          command: |
            pip install pytest pytest-cov
            pytest --cov=. --cov-report=term --cov-fail-under=80
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  build-docker-image:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            docker build --build-arg DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY} -t $ECR_REPOSITORY:$CIRCLE_SHA1 .
      - aws-ecr/ecr-login:
          region: AWS_REGION
      - run:
          name: Push Docker Image to AWS ECR
          command: |
            docker tag $ECR_REPOSITORY:$CIRCLE_SHA1 $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$CIRCLE_SHA1
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$CIRCLE_SHA1

  deploy-to-ecs:
    executor: aws-ecs/default
    steps:
      - checkout
      - aws-ecs/deploy-service-update:
          name: Deploy to ECS
          cluster: ${CLUSTER_NAME}
          service: ${SERVICE_NAME}
          container-name: ${CONTAINER_NAME}
          container-image-name-updates: "container=${CONTAINER_NAME},tag=$CIRCLE_SHA1"
          region: ${AWS_REGION}

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-and-test
      - build-docker-image:
          requires:
            - build-and-test
      - deploy-to-ecs:
          requires:
            - build-docker-image
